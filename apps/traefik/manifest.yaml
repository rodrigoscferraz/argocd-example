apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-1"

  # Add this finalizer ONLY if you want these to cascade delete (A cascade delete, deletes both the app and its resources, rather than only the app.)
  finalizers:
    - resources-finalizer.argocd.argoproj.io

spec:
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
      # - ServerSideApply=true # Necessary due to some resources that are created dinamically and not by th ehelm chart https://github.com/prometheus-community/helm-charts/issues/2196#issuecomment-1713701019
      # - PruneLast=true # Necessary due to some resources that are created dinamically and not by th ehelm chart https://github.com/prometheus-community/helm-charts/issues/2196#issuecomment-1713701019

  source:
    chart: traefik
    repoURL: "https://traefik.github.io/charts"
    targetRevision: 26.1.0
    # https://github.com/traefik/traefik-helm-chart/blob/645fbae55c013870c26fd7fcfecf909465ca0e76/traefik/values.yaml#L1
    helm:
      # skipCrds: true
      valuesObject:
        deployment:
          labels:
            prometheus.io/scrap-with: kube-prometheus-stack
        logs:
          general:
            level: DEBUG
        ingressRoute:
          dashboard:
            # -- Create an IngressRoute for the dashboard
            enabled: true
            # -- Additional ingressRoute annotations (e.g. for kubernetes.io/ingress.class)
            annotations: {}
            # -- Additional ingressRoute labels (e.g. for filtering IngressRoute by custom labels)
            labels: {}
            # -- The router match rule used for the dashboard ingressRoute
            matchRule: Host(`localhost`) && PathPrefix(`/dashboard`) || PathPrefix(`/api`)
            entryPoints: ["web"]

        metrics:

          serviceMonitor:
            metricRelabelings: []
              - sourceLabels: [__name__]
                separator: ;
                regex: ^fluentd_output_status_buffer_(oldest|newest)_.+
                replacement: $1
                action: drop
            relabelings: []
              - sourceLabels: [__meta_kubernetes_pod_node_name]
                separator: ;
                regex: ^(.*)$
                targetLabel: nodename
                replacement: $1
                action: replace
            jobLabel: traefik
            interval: 30s
            honorLabels: true

        ports:
          # The name of this one can't be changed as it is used for the readiness and
          # liveness probes, but you can adjust its config to your liking
          traefik:
            port: 9000
            expose: true
            # The exposed port for this service
            exposedPort: 9000
            # The port protocol (TCP/UDP)
            protocol: TCP

            #
            # Things that I felt more comfortable setting via the CLI
            #
            additionalArguments:
              - "--api.insecure=true"

  destination:
    server: "https://kubernetes.default.svc"
    namespace: traefik
